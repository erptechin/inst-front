{"version":3,"file":"static/js/200.167d986e.chunk.js","mappings":"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","sources":["components/Breadcrumbs/index.tsx","contexts/usePatch.tsx","screens/oms_dashboard/customers/addEdit.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\ninterface BreadcrumbProps {\n  pageName: string;\n  root: string;\n}\nconst Breadcrumbs = ({ root, pageName }: BreadcrumbProps) => {\n  return (\n    <div className=\"main-content-header\">\n      <div className=\"card\">\n        <div className=\"card-body no-padding\">\n          <ol className=\"breadcrumb ltn no-radius\">\n            <li className=\"text-normal\"><NavLink to=\"/dashboard\">Main Dashboard</NavLink></li>\n            {root && (<li className=\"text-normal\"><NavLink to={`/${root}`}>{root}</NavLink></li>)}\n            <li className=\"active text-lg\">{pageName}</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function usePatch() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const edit = async (resource: string, body: object) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.editDataApi({ url:resource, body }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { edit, data, loading };\n}","import { useEffect, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputBox, PasswordBox, ButtonBox, CheckBox, Buttons, SelectBox, MultiSelectBox } from \"../../../components/RenderFroms\";\nimport { BiSolidUser, BiSolidLockAlt, BiRightArrowAlt } from \"react-icons/bi\";\nimport Breadcrumbs from \"../../../components/Breadcrumbs\";\nimport ListTitle from \"../../../components/ListTitle\";\nimport { useFetch } from \"../../../contexts/useFetch\";\nimport { useFetchSingle } from \"../../../contexts/useFetchSingle\";\nimport { usePost } from \"../../../contexts/usePost\";\nimport { usePatch } from \"../../../contexts/usePatch\";\nconst resource = \"customers\";\n\nconst defaultValue = {\n\tcompanyName: \"\",\n\tcustomerName: \"\",\n\tcustomerEmailId: \"\",\n\tcustomerAccountAdminName: \"\",\n\tcustomerAccountAdminEmailId: \"\",\n\n\n}\n\nexport default function AddCustomer() {\n\tconst navigate = useNavigate();\n\tconst { id } = useParams();\n\n\tconst validationSchemaInfo = Yup.object().shape({\n\t\tcompanyName: Yup.string().required(\"This is required\"),\n\t\tcustomerName: Yup.string().required(\"Modules is required\"),\n\t\tcustomerEmailId: Yup.string().required('This is required'),\n\n\n\t});\n\n\tconst { fetchSingle, data: customers, loading: loadingData } = useFetchSingle();\n\tuseEffect(() => {\n\t\tfetchSingle(resource, id)\n\t}, [id])\n\n\tconst { create, data: respond, loading } = usePost();\n\tconst { edit, data: respond1, loading: loading1 } = usePatch();\n\tconst handleUpdate = (values: any) => {\n\t\tif (id) {\n\t\t\tedit(resource, values)\n\t\t} else {\n\t\t\tcreate(resource, values)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif ((respond as any)?.status == 201) {\n\t\t\tnavigate(-1)\n\t\t}\n\t\tif ((respond1 as any)?.status == 200) {\n\t\t\tnavigate(-1)\n\t\t}\n\t}, [respond, respond1])\n\n\tif (loadingData) {\n\t\treturn <>loading</>\n\t}\n\n\treturn (\n\t\t<>\n\n\t\t\t<Breadcrumbs root=\"customers\" pageName={`${id ? 'Edit' : 'Add'} Customers`} />\n\t\t\t<div className=\"main-content-body\">\n\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"card\">\n\n\t\t\t\t\t\t\t<ListTitle ListName={`${id ? 'Edit' : 'Add New'} Customer (* indicates mandatory field(s)).`} />\n\n\n\t\t\t\t\t\t\t<div className=\"form-horizontal has-validation-callback\">\n\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={customers ? customers : defaultValue}\n\t\t\t\t\t\t\t\t\tvalidationSchema={validationSchemaInfo}\n\t\t\t\t\t\t\t\t\tonSubmit={(values: any) => handleUpdate(values)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"companyName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Company Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"customerName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Customer Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"customerEmailId\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Customer Email ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"customerAccountAdminName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Customer Account/Admin Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"customerAccountAdminEmailId\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Customer Account/Admin Email ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"AddGroup_Submit\" className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 col-md-8 col-sm-12 col-xs-12 no-padding pb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons loading={loading || loading1} className=\"btn-success\" value=\"Save Customer\" onClick={() => handleSubmit()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons className=\"btn-grey\" value=\"Go Back to List\" onClick={() => navigate(-1)} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\">&nbsp;</div>\n\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</>\n\t);\n}\n\n\n"],"names":["_ref","root","pageName","_jsx","className","children","_jsxs","NavLink","to","concat","usePatch","token","useContext","MainContext","data","setData","useState","loading","setLoading","edit","async","resource","body","response","apis","editDataApi","url","error","defaultValue","companyName","customerName","customerEmailId","customerAccountAdminName","customerAccountAdminEmailId","AddCustomer","navigate","useNavigate","id","useParams","validationSchemaInfo","Yup","shape","required","fetchSingle","customers","loadingData","useFetchSingle","useEffect","create","respond","usePost","respond1","loading1","status","_Fragment","Breadcrumbs","ListTitle","ListName","Formik","initialValues","validationSchema","onSubmit","values","handleUpdate","handleChange","handleBlur","handleSubmit","errors","InputBox","name","lable","placeholder","htmlFor","Buttons","value","onClick"],"sourceRoot":""}