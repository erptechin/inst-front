{"version":3,"file":"static/js/887.c3f1af3c.chunk.js","mappings":"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","sources":["components/Breadcrumbs/index.tsx","contexts/usePatch.tsx","screens/dashboards/settings/editProfile.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\ninterface BreadcrumbProps {\n  pageName: string;\n  root: string;\n}\nconst Breadcrumbs = ({ root, pageName }: BreadcrumbProps) => {\n  return (\n    <div className=\"main-content-header\">\n      <div className=\"card\">\n        <div className=\"card-body no-padding\">\n          <ol className=\"breadcrumb ltn no-radius\">\n            <li className=\"text-normal\"><NavLink to=\"/dashboard\">Main Dashboard</NavLink></li>\n            {root && (<li className=\"text-normal\"><NavLink to={`/${root}`}>{root}</NavLink></li>)}\n            <li className=\"active text-lg\">{pageName}</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function usePatch() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const edit = async (resource: string, body: object) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.editDataApi({ url:resource, body }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { edit, data, loading };\n}","import { useEffect, useContext } from \"react\";\nimport { MainContext } from \"../../../contexts/mainProvider\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from 'react-toastify';\nimport { InputBox, PasswordBox, Buttons, SelectBox } from \"../../../components/RenderFroms\";\nimport { usePatch } from \"../../../contexts/usePatch\";\nimport { useFetchSingle } from \"../../../contexts/useFetchSingle\";\nimport Breadcrumbs from \"../../../components/Breadcrumbs\";\nimport ListTitle from \"../../../components/ListTitle\";\nconst resource = \"system_users\";\n\nexport default function EditProfile() {\n\tconst { user } = useContext(MainContext)\n\n\tconst validationSchemaInfo = Yup.object().shape({\n\t\tsystemUserLoginId: Yup.string()\n\t\t\t.email(\"Invalid email address\")\n\t\t\t.required(\"Email is Required\"),\n\t\tsystemUserName: Yup.string().required(\"Name is required\"),\n\t\tsystemUserMenuStyle: Yup.string().required(\"This is required\"),\n\t});\n\n\tconst { fetchSingle, data: userI, loading: loadingData } = useFetchSingle();\n\tuseEffect(() => {\n\t\tif (user?.userId)\n\t\t\tfetchSingle(resource, user.userId)\n\t}, [user])\n\n\tconst { edit, data: respond, loading } = usePatch();\n\tconst handleUpdate = (values: any) => {\n\t\tif (values.password && values.password !== values.confirmPassword) {\n\t\t\ttoast.error(\"New Password And Confirm Password Does Not Match\");\n\t\t} else {\n\t\t\tedit(resource, values)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif ((respond as any)?.status == 200) {\n\t\t\ttoast.success(\"Profile updated successfully\")\n\t\t}\n\t}, [respond])\n\n\tconst menuOptions = [{ label: 'Collapsed', value: 'collapsed' }, { label: 'Expanded', value: 'expanded' }]\n\n\tif (loadingData) {\n\t\treturn <>loading</>\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Breadcrumbs root=\"\" pageName=\"Profile\" />\n\n\t\t\t<div className=\"main-content-body\">\n\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<ListTitle ListName=\"Edit Your Profile (* indicates mandatory field(s))\" />\n\n\t\t\t\t\t\t\t<div className=\"form-horizontal has-validation-callback\">\n\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={userI}\n\t\t\t\t\t\t\t\t\tvalidationSchema={validationSchemaInfo}\n\t\t\t\t\t\t\t\t\tonSubmit={(values: any) => handleUpdate(values)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemUserLoginId\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Login Username\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemUserName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Your Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={menuOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemUserMenuStyle\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Menu Style\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\" style={{ marginTop: '30px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"MenuStyle\" className=\"col-lg-3 col-sm-2 control-label\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-9 mb-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong className=\"red\">NOTE: Supply Passwords below only if you want to change.</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<PasswordBox\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Login Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<PasswordBox\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Confirm Login Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons loading={loading} className=\"btn-success\" value=\"Save Profile\" onClick={() => handleSubmit()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</>\n\t);\n}\n\n\n"],"names":["_ref","root","pageName","_jsx","className","children","_jsxs","NavLink","to","concat","usePatch","token","useContext","MainContext","data","setData","useState","loading","setLoading","edit","async","resource","body","response","apis","editDataApi","url","error","EditProfile","user","validationSchemaInfo","Yup","shape","systemUserLoginId","email","required","systemUserName","systemUserMenuStyle","fetchSingle","userI","loadingData","useFetchSingle","useEffect","userId","respond","status","toast","success","menuOptions","label","value","_Fragment","Breadcrumbs","ListTitle","ListName","Formik","initialValues","validationSchema","onSubmit","values","password","confirmPassword","handleUpdate","handleChange","handleBlur","handleSubmit","errors","InputBox","name","lable","placeholder","SelectBox","options","style","marginTop","htmlFor","PasswordBox","Buttons","onClick"],"sourceRoot":""}