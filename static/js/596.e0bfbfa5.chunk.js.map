{"version":3,"file":"static/js/596.e0bfbfa5.chunk.js","mappings":"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","sources":["components/Breadcrumbs/index.tsx","contexts/useFetchByLoad.tsx","contexts/usePatch.tsx","screens/dashboards/settings/databaseMaintenance.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\ninterface BreadcrumbProps {\n  pageName: string;\n  root: string;\n}\nconst Breadcrumbs = ({ root, pageName }: BreadcrumbProps) => {\n  return (\n    <div className=\"main-content-header\">\n      <div className=\"card\">\n        <div className=\"card-body no-padding\">\n          <ol className=\"breadcrumb ltn no-radius\">\n            <li className=\"text-normal\"><NavLink to=\"/dashboard\">Main Dashboard</NavLink></li>\n            {root && (<li className=\"text-normal\"><NavLink to={`/${root}`}>{root}</NavLink></li>)}\n            <li className=\"active text-lg\">{pageName}</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import { useState, useContext } from 'react';\nimport { MainContext } from \"../contexts/mainProvider\";\nimport apis from \"./apis\";\n\nexport function useFetchByLoad() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState<any>(null);\n    const [loading, setLoading] = useState(false);\n    const fetch = async (params: any) => {\n        try {\n            setLoading(true);\n            setData(null);\n            const response: any = await apis.getDataApi({ ...params, query: params.query ? JSON.parse(params.query) : {} }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { fetch, data, loading };\n}","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function usePatch() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const edit = async (resource: string, body: object) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.editDataApi({ url:resource, body }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { edit, data, loading };\n}","import { useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Buttons, CheckBox } from \"../../../components/RenderFroms\";\nimport { toast } from 'react-toastify';\nimport { useFetchByLoad } from \"../../../contexts/useFetchByLoad\";\nimport { usePatch } from \"../../../contexts/usePatch\";\nimport Breadcrumbs from \"../../../components/Breadcrumbs\";\nimport ListTitle from \"../../../components/ListTitle\";\nconst resource = \"system_settings\";\n\nconst defaultValue = {\n\tdeleteRecord: false,\n\toptimzeDatabase: false,\n\n}\n\nexport default function DatabaseMaintenance() {\n\n\tconst validationSchemaInfo = Yup.object().shape({\n\n\n\t});\n\n\tconst { fetch, data, loading: loadingData } = useFetchByLoad();\n\tuseEffect(() => {\n\t\tfetch({ url: resource, query: JSON.stringify('query') })\n\t}, [])\n\n\tconst { edit, data: respond, loading: loading } = usePatch();\n\tconst handleUpdate = (values: any) => {\n\t\tedit(resource, values)\n\t}\n\n\tuseEffect(() => {\n\t\tif ((respond as any)?.status == 200) {\n\t\t\ttoast.success(\"system settings update successfully\");\n\t\t}\n\t}, [respond])\n\n\tif (loadingData) {\n\t\treturn <>loading</>\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<Breadcrumbs root=\"\" pageName=\"Database Maintenance\" />\n\t\t\t<div className=\"main-content-body\">\n\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"card\">\n\n\t\t\t\t\t\t\t<ListTitle ListName={`Database Maintenance(* indicates mandatory field(s)).`} />\n\n\t\t\t\t\t\t\t<div className=\"form-horizontal has-validation-callback\">\n\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={data ? data : defaultValue}\n\t\t\t\t\t\t\t\t\tvalidationSchema={validationSchemaInfo}\n\t\t\t\t\t\t\t\t\tonSubmit={(values: any) => handleUpdate(values)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"deleteRecord\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Permanantly Delete Deleted Records\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"optimzeDatabase\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Optimize Database\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons loading={loading} className=\"btn-success\" value=\"Save Database Maintenance\" onClick={() => handleSubmit()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\n\n"],"names":["_ref","root","pageName","_jsx","className","children","_jsxs","NavLink","to","concat","useFetchByLoad","token","useContext","MainContext","data","setData","useState","loading","setLoading","fetch","async","response","apis","getDataApi","params","query","JSON","parse","error","usePatch","edit","resource","body","editDataApi","url","defaultValue","deleteRecord","optimzeDatabase","DatabaseMaintenance","validationSchemaInfo","Yup","shape","loadingData","useEffect","stringify","respond","status","toast","success","_Fragment","Breadcrumbs","ListTitle","ListName","Formik","initialValues","validationSchema","onSubmit","values","handleUpdate","handleChange","handleBlur","handleSubmit","errors","CheckBox","name","lable","placeholder","Buttons","value","onClick"],"sourceRoot":""}