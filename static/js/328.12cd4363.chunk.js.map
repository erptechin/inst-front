{"version":3,"file":"static/js/328.12cd4363.chunk.js","mappings":"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","sources":["components/Breadcrumbs/index.tsx","contexts/useFetchSingle.tsx","contexts/usePatch.tsx","screens/oms_dashboard/suppliers/addEdit.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\ninterface BreadcrumbProps {\n  pageName: string;\n  root: string;\n}\nconst Breadcrumbs = ({ root, pageName }: BreadcrumbProps) => {\n  return (\n    <div className=\"main-content-header\">\n      <div className=\"card\">\n        <div className=\"card-body no-padding\">\n          <ol className=\"breadcrumb ltn no-radius\">\n            <li className=\"text-normal\"><NavLink to=\"/dashboard\">Main Dashboard</NavLink></li>\n            {root && (<li className=\"text-normal\"><NavLink to={`/${root}`}>{root}</NavLink></li>)}\n            <li className=\"active text-lg\">{pageName}</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import { useContext, useState, useEffect } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function useFetchSingle() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState<any>(null);\n    const [loading, setLoading] = useState(false);\n    const fetchSingle = async (resource: any, id: any) => {\n        try {\n            setLoading(true);\n            setData(null);\n            const response: any = await apis.getSingleDataApi({ url: resource, id }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { fetchSingle, data, loading };\n}","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function usePatch() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const edit = async (resource: string, body: object) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.editDataApi({ url:resource, body }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { edit, data, loading };\n}","import { useEffect, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputBox, PasswordBox, ButtonBox, CheckBox, Buttons, SelectBox, TextareaBox } from \"../../../components/RenderFroms\";\nimport { BiSolidUser, BiSolidLockAlt, BiRightArrowAlt } from \"react-icons/bi\";\nimport Breadcrumbs from \"../../../components/Breadcrumbs\";\nimport ListTitle from \"../../../components/ListTitle\";\nimport { useFetch } from \"../../../contexts/useFetch\";\nimport { useFetchSingle } from \"../../../contexts/useFetchSingle\";\nimport { usePost } from \"../../../contexts/usePost\";\nimport { usePatch } from \"../../../contexts/usePatch\";\nconst resource = \"suppliers\";\n\nconst defaultValue = {\n\tsupplierType: \"\",\n\tsupplierName: \"\",\n\tsupplierAddress: \"\",\n\tsupplierSuburb: \"\",\n\tsupplierState: \"\",\n\tsupplierCountry: \"\",\n\tsupplierPostalCode: \"\",\n\tsupplierEmailAddress: \"\",\n\tsupplierPhoneNumber: \"\",\n\tsupplierMobileNumber: \"\",\n\n}\n\nexport default function AddSupplier() {\n\n\n\n\tconst navigate = useNavigate();\n\tconst { id } = useParams();\n\n\tconst validationSchemaInfo = Yup.object().shape({\n\t\tsupplierType: Yup.string().required(\"User namr is required\"),\n\t\tsupplierName: Yup.string().required(\"Name is required\"),\n\t\t \n\n\n\t});\n\n\tconst { fetchSingle, data: suppliers, loading: loadingData } = useFetchSingle();\n\tuseEffect(() => {\n\t\tfetchSingle(resource, id)\n\t}, [id])\n\n\tconst { create, data: respond, loading } = usePost();\n\tconst { edit, data: respond1, loading: loading1 } = usePatch();\n\tconst handleUpdate = (values: any) => {\n\t\t \n\t\tif (id) {\n\t\t \n\t\t\tedit(resource, values)\n\t\t} else {\n\t\t\t \n\t\t\tcreate(resource, values)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif ((respond as any)?.status == 201) {\n\t\t\tnavigate(-1)\n\t\t}\n\t\tif ((respond1 as any)?.status == 200) {\n\t\t\tnavigate(-1)\n\t\t}\n\t}, [respond, respond1])\n\n\tif (loadingData) {\n\t\treturn <>loading</>\n\t}\n\n\tconst statusOptions = [{ label: 'Local', value: 'local' }, { label: 'Overseas', value: 'overseas' }]\n\n\treturn (\n\t\t<>\n\n\t\t\t<Breadcrumbs root=\"suppliers\" pageName={`${id ? 'Edit' : 'Add'} Suppliers`} />\n\n\t\t\t<div className=\"main-content-body\">\n\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"card\">\n\n\t\t\t\t\t\t\t<ListTitle ListName={`${id ? 'Edit' : 'Add New'} Supplier (* indicates mandatory field(s)).`} />\n\n\n\t\t\t\t\t\t\t<div className=\"form-horizontal has-validation-callback\">\n\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={suppliers ? suppliers : defaultValue}\n\t\t\t\t\t\t\t\t\tvalidationSchema={validationSchemaInfo}\n\t\t\t\t\t\t\t\t\tonSubmit={(values: any) => handleUpdate(values)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={statusOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierType\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Type\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select One\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<TextareaBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierAddress\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierSuburb\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Suburb\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierState\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier State\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierCountry\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Country\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierPostalCode\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Postal Code\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierEmailAddress\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Email ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierPhoneNumber\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Phone No.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"supplierMobileNumber\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Supplier Mobile No.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"AddGroup_Submit\" className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 col-md-8 col-sm-12 col-xs-12 no-padding mt-3 mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons loading={loading || loading1} className=\"btn-success\" value=\"Save Supplier\" onClick={() => handleSubmit()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons className=\"btn-grey\" value=\"Go Back to List\" onClick={() => navigate(-1)} />\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</>\n\t);\n}\n\n\n"],"names":["_ref","root","pageName","_jsx","className","children","_jsxs","NavLink","to","concat","useFetchSingle","token","useContext","MainContext","data","setData","useState","loading","setLoading","fetchSingle","async","resource","id","response","apis","getSingleDataApi","url","error","usePatch","edit","body","editDataApi","defaultValue","supplierType","supplierName","supplierAddress","supplierSuburb","supplierState","supplierCountry","supplierPostalCode","supplierEmailAddress","supplierPhoneNumber","supplierMobileNumber","AddSupplier","navigate","useNavigate","useParams","validationSchemaInfo","Yup","shape","required","suppliers","loadingData","useEffect","create","respond","usePost","respond1","loading1","status","_Fragment","statusOptions","label","value","Breadcrumbs","ListTitle","ListName","Formik","initialValues","validationSchema","onSubmit","values","handleUpdate","handleChange","handleBlur","handleSubmit","errors","SelectBox","options","name","lable","placeholder","InputBox","TextareaBox","htmlFor","Buttons","onClick"],"sourceRoot":""}