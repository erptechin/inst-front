{"version":3,"file":"static/js/476.e49e9193.chunk.js","mappings":"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","sources":["components/Breadcrumbs/index.tsx","contexts/useFetchSingle.tsx","contexts/usePatch.tsx","screens/dashboards/email_templates/addEdit.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\ninterface BreadcrumbProps {\n  pageName: string;\n  root: string;\n}\nconst Breadcrumbs = ({ root, pageName }: BreadcrumbProps) => {\n  return (\n    <div className=\"main-content-header\">\n      <div className=\"card\">\n        <div className=\"card-body no-padding\">\n          <ol className=\"breadcrumb ltn no-radius\">\n            <li className=\"text-normal\"><NavLink to=\"/dashboard\">Main Dashboard</NavLink></li>\n            {root && (<li className=\"text-normal\"><NavLink to={`/${root}`}>{root}</NavLink></li>)}\n            <li className=\"active text-lg\">{pageName}</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import { useContext, useState, useEffect } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function useFetchSingle() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState<any>(null);\n    const [loading, setLoading] = useState(false);\n    const fetchSingle = async (resource: any, id: any) => {\n        try {\n            setLoading(true);\n            setData(null);\n            const response: any = await apis.getSingleDataApi({ url: resource, id }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { fetchSingle, data, loading };\n}","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function usePatch() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const edit = async (resource: string, body: object) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.editDataApi({ url:resource, body }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { edit, data, loading };\n}","import { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputBox, Buttons, SelectBox, TextareaBox } from \"../../../components/RenderFroms\";\nimport { useFetchSingle } from \"../../../contexts/useFetchSingle\";\nimport { usePost } from \"../../../contexts/usePost\";\nimport { usePatch } from \"../../../contexts/usePatch\";\nimport Breadcrumbs from \"../../../components/Breadcrumbs\";\nimport ListTitle from \"../../../components/ListTitle\";\nconst resource = \"system_emails_templates\";\n\nconst defaultValue = {\n\tsystemAppId: \"\",\n\tsystemSmtpServerId: \"\",\n\tsystemEmailTemplateTitle: \"\",\n\tsystemEmailTemplateSubject: \"\",\n\tsystemEmailTemplateBody: \"\",\n\tsystemEmailTemplateSenderName: \"\",\n\tsystemEmailTemplateSenderEmail: \"\",\n\tsystemEmailAction: \"\",\n\tsystemEmailTemplateSaveLogs: \"\"\n\n}\n\nexport default function AddEmailTemplate() {\n\tconst navigate = useNavigate();\n\tconst { id } = useParams();\n\n\tconst validationSchemaInfo = Yup.object().shape({\n\t\tsystemAppId: Yup.string().required(\"This is required\"),\n\t\tsystemEmailTemplateTitle: Yup.string().required(\"This is required\"),\n\t\tsystemEmailAction: Yup.string().required(\"This is required\"),\n\t\tsystemEmailTemplateSaveLogs: Yup.string().required(\"This is required\"),\n\t\tsystemEmailTemplateSubject: Yup.string().required(\"Subject is required\"),\n\t\tsystemEmailTemplateBody: Yup.string().required(\"Body is required\"),\n\t\tsystemEmailTemplateSenderName: Yup.string().required(\"Name is required\"),\n\t\tsystemEmailTemplateSenderEmail: Yup.string()\n\t\t\t.email(\"Invalid email address\")\n\t\t\t.required(\"Email is Required\"),\n\n\t});\n\n\tconst { fetchSingle, data: users, loading: loadingData } = useFetchSingle();\n\tuseEffect(() => {\n\t\tfetchSingle(resource, id)\n\t}, [id])\n\n\tconst { create, data: respond, loading } = usePost();\n\tconst { edit, data: respond1, loading: loading1 } = usePatch();\n\tconst handleUpdate = (values: any) => {\n\t\tif (id) {\n\t\t\tedit(resource, values)\n\t\t} else {\n\t\t\tcreate(resource, values)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif ((respond as any)?.status == 201) {\n\t\t\tnavigate(-1)\n\t\t}\n\t\tif ((respond1 as any)?.status == 200) {\n\t\t\tnavigate(-1)\n\t\t}\n\t}, [respond, respond1])\n\n\t\n\tconst systemAppOptions = [{ label: 'Order Management System  (OMS)', value: '1' }, { label: 'Products and Price List Management System  (PPLMS)', value: '2' }]\n\tconst saveLogOptions = [{ label: 'Yes, Save Logs of Outgoing Emails using this email template.', value: 'Yes' }, { label: 'No, Do Not Save Logs of Outgoing Emails using this email template.', value: 'No' }]\n\tconst smtpserverOptions = [{ label: 'Instrowest Linux VPS', value: '1' }]\n\n\tif (loadingData) {\n\t\treturn <>loading</>\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<Breadcrumbs root=\"email-templates\" pageName=\"Add Email Template\" />\n\n\n\t\t\t<div className=\"main-content-body\">\n\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"card\">\n\n\t\t\t\t\t\t\t<ListTitle ListName={`${id ? 'Edit' : 'Add'} Email Template (All fields are mandatory).`} />\n\n\t\t\t\t\t\t\t<div className=\"form-horizontal has-validation-callback\">\n\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={users ? users : defaultValue}\n\t\t\t\t\t\t\t\t\tvalidationSchema={validationSchemaInfo}\n\t\t\t\t\t\t\t\t\tonSubmit={(values: any) => handleUpdate(values)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={systemAppOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemAppId\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"System App\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={smtpserverOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemSmtpServerId\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"SMTP Server\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailAction\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Email Template Action\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailTemplateTitle\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Email Template Title\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailTemplateSubject\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Email Template Subject\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"red\">Use the following variables into the email subject to set dynamic values.</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grayBox\">{`{Customer Name}`}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t<TextareaBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailTemplateBody\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Email Template Body\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"red\">Use the following variables into the email body to set dynamic values.</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grayBox\">{`{Customer Name}`}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailTemplateSenderName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Sender's Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailTemplateSenderEmail\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Sender's Email ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={saveLogOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"systemEmailTemplateSaveLogs\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Save Logs?\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons loading={loading || loading1} className=\"btn-success\" value=\"Save Email Template\" onClick={() => handleSubmit()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons className=\"btn-grey\" value=\"Go Back to List\" onClick={() => navigate(-1)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"names":["_ref","root","pageName","_jsx","className","children","_jsxs","NavLink","to","concat","useFetchSingle","token","useContext","MainContext","data","setData","useState","loading","setLoading","fetchSingle","async","resource","id","response","apis","getSingleDataApi","url","error","usePatch","edit","body","editDataApi","defaultValue","systemAppId","systemSmtpServerId","systemEmailTemplateTitle","systemEmailTemplateSubject","systemEmailTemplateBody","systemEmailTemplateSenderName","systemEmailTemplateSenderEmail","systemEmailAction","systemEmailTemplateSaveLogs","AddEmailTemplate","navigate","useNavigate","useParams","validationSchemaInfo","Yup","shape","required","email","users","loadingData","useEffect","create","respond","usePost","respond1","loading1","status","systemAppOptions","label","value","saveLogOptions","smtpserverOptions","_Fragment","Breadcrumbs","ListTitle","ListName","Formik","initialValues","validationSchema","onSubmit","values","handleUpdate","handleChange","handleBlur","handleSubmit","errors","SelectBox","options","name","lable","placeholder","InputBox","TextareaBox","Buttons","onClick"],"sourceRoot":""}