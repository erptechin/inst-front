{"version":3,"file":"static/js/618.908df7ef.chunk.js","mappings":"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","sources":["components/Breadcrumbs/index.tsx","contexts/useDelete.tsx","contexts/useFetch.tsx","contexts/useFetchByLoad.tsx","contexts/useFetchSingle.tsx","contexts/usePatch.tsx","screens/pplms_dashboard/products/addEdit.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\ninterface BreadcrumbProps {\n  pageName: string;\n  root: string;\n}\nconst Breadcrumbs = ({ root, pageName }: BreadcrumbProps) => {\n  return (\n    <div className=\"main-content-header\">\n      <div className=\"card\">\n        <div className=\"card-body no-padding\">\n          <ol className=\"breadcrumb ltn no-radius\">\n            <li className=\"text-normal\"><NavLink to=\"/dashboard\">Main Dashboard</NavLink></li>\n            {root && (<li className=\"text-normal\"><NavLink to={`/${root}`}>{root}</NavLink></li>)}\n            <li className=\"active text-lg\">{pageName}</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function useDelete() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const remove = async (params: any) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.deleteDataApi(params, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { remove, data, loading };\n}","import { useEffect, useState, useContext } from 'react';\nimport { MainContext } from \"../contexts/mainProvider\";\nimport apis from \"./apis\";\n\nexport function useFetch(params: any) {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState<any>({});\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            const response: any = await apis.getDataApi({ ...params, query: params.query ? JSON.parse(params.query) : {} }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        };\n        fetchData();\n    }, [params.query]);\n\n    return { data, loading };\n}","import { useState, useContext } from 'react';\nimport { MainContext } from \"../contexts/mainProvider\";\nimport apis from \"./apis\";\n\nexport function useFetchByLoad() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState<any>(null);\n    const [loading, setLoading] = useState(false);\n    const fetch = async (params: any) => {\n        try {\n            setLoading(true);\n            setData(null);\n            const response: any = await apis.getDataApi({ ...params, query: params.query ? JSON.parse(params.query) : {} }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { fetch, data, loading };\n}","import { useContext, useState, useEffect } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function useFetchSingle() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState<any>(null);\n    const [loading, setLoading] = useState(false);\n    const fetchSingle = async (resource: any, id: any) => {\n        try {\n            setLoading(true);\n            setData(null);\n            const response: any = await apis.getSingleDataApi({ url: resource, id }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { fetchSingle, data, loading };\n}","import { useContext, useState } from 'react';\nimport apis from \"./apis\";\nimport { MainContext } from \"../contexts/mainProvider\";\n\nexport function usePatch() {\n    const { token } = useContext(MainContext)\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const edit = async (resource: string, body: object) => {\n        try {\n            setLoading(true);\n            const response: any = await apis.editDataApi({ url:resource, body }, token);\n            if (response) {\n                setData(response);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n    return { edit, data, loading };\n}","import { useEffect, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputBox, PasswordBox, ButtonBox, CheckBox, Buttons, SelectBox, MultiSelectBox } from \"../../../components/RenderFroms\";\nimport { BiSolidUser, BiSolidLockAlt, BiRightArrowAlt } from \"react-icons/bi\";\nimport Breadcrumbs from \"../../../components/Breadcrumbs\";\nimport ListTitle from \"../../../components/ListTitle\";\nimport { useFetch } from \"../../../contexts/useFetch\";\nimport { useFetchSingle } from \"../../../contexts/useFetchSingle\";\nimport { usePatch } from \"../../../contexts/usePatch\";\nimport { usePost } from \"../../../contexts\";\nconst resource = \"products\";\n\nconst defaultValue = {\n\tpartNo: \"\",\n\tpartTitle: \"\",\n\tpartSerialNo: \"\",\n}\n\nexport default function AddProduct() {\n\tconst navigate = useNavigate();\n\tconst { id } = useParams();\n\n\tconst validationSchemaInfo = Yup.object().shape({\n\t\tpartNo: Yup.string().required(\"Part No is required\"),\n\t\tpartTitle: Yup.string().required(\"Title is required\"),\n\t\tpartSerialNo: Yup.string().required('This is required')\n\t});\n\n\tconst { fetchSingle, data: products, loading: loadingData } = useFetchSingle();\n\tuseEffect(() => {\n\t\tfetchSingle(resource, id)\n\t}, [id])\n\n\tconst { create, data: respond, loading } = usePost();\n\tconst { edit, data: respond1, loading: loading1 } = usePatch();\n\tconst handleUpdate = (values: any) => {\n\t\tif (id) {\n\t\t\tedit(resource, values)\n\t\t} else {\n\t\t\tcreate(resource, values)\n\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif ((respond as any)?.status == 201) {\n\t\t\tnavigate(-1)\n\t\t}\n\t\tif ((respond1 as any)?.status == 200) {\n\t\t\tnavigate(-1)\n\t\t}\n\t}, [respond, respond1])\n\n\tif (loadingData) {\n\t\treturn <>loading</>\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Breadcrumbs root=\"products\" pageName={`${id ? 'Edit' : 'Add'} Product`} />\n\n\n\n\t\t\t<div className=\"main-content-body\">\n\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<ListTitle ListName={`${id ? 'Edit' : 'Add New'} Product (* indicates mandatory field(s)).`} />\n\n\n\t\t\t\t\t\t\t<div className=\"form-horizontal has-validation-callback\">\n\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={products ? products : defaultValue}\n\t\t\t\t\t\t\t\t\tvalidationSchema={validationSchemaInfo}\n\t\t\t\t\t\t\t\t\tonSubmit={(values: any) => handleUpdate(values)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"partNo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Part No\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"partTitle\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Part Title\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"partSerialNo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlable=\"Part Serial\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"AddGroup_Submit\" className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 control-label\">&nbsp;</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 col-md-8 col-sm-12 col-xs-12 no-padding mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Buttons loading={loading || loading1} className=\"btn-success\" value=\"Save Product\" onClick={() => handleSubmit()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Buttons className=\"btn-grey\" value=\"Go Back to List\" onClick={() => navigate(-1)} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</>\n\t);\n}\n\n\n"],"names":["_ref","root","pageName","_jsx","className","children","_jsxs","NavLink","to","concat","useDelete","token","useContext","MainContext","data","setData","useState","loading","setLoading","remove","async","response","apis","deleteDataApi","params","error","useFetch","useEffect","getDataApi","query","JSON","parse","fetchData","useFetchByLoad","fetch","useFetchSingle","fetchSingle","resource","id","getSingleDataApi","url","usePatch","edit","body","editDataApi","defaultValue","partNo","partTitle","partSerialNo","AddProduct","navigate","useNavigate","useParams","validationSchemaInfo","Yup","shape","required","products","loadingData","create","respond","usePost","respond1","loading1","status","_Fragment","Breadcrumbs","ListTitle","ListName","Formik","initialValues","validationSchema","onSubmit","values","handleUpdate","handleChange","handleBlur","handleSubmit","errors","InputBox","name","lable","placeholder","htmlFor","Buttons","value","onClick"],"sourceRoot":""}